---
apiVersion: kibana.k8s.elastic.co/v1
kind: Kibana
metadata:
  name: ${elastic_instance_name}
spec:
  version: 8.15.3
  count: 1
  elasticsearchRef:
    name: ${elastic_instance_name}
  http:
    service:
      spec:
        type: ClusterIP

---
apiVersion: gateway.networking.k8s.io/v1
kind: HTTPRoute
metadata:
  name: kibana
spec:
  parentRefs:
    - name: ${gateway_name}
      namespace: ${gateway_namespace}
      sectionName: kibana-https
  hostnames:
    - k8s-search-kibana.symplectic.internal
  rules:
    - matches:
        - path:
            type: PathPrefix
            value: /
      backendRefs:
        - name: ${elastic_instance_name}-kb-http
          port: 5601

# BackendTLSPolicy adds trust for Kibana root certificate when HTTPRout are routing
# to the Kibana HTTPS service.
---
apiVersion: gateway.networking.k8s.io/v1alpha3
kind: BackendTLSPolicy
metadata:
  name: tls-upstream-kibana
spec:
  targetRefs:
    - kind: Service
      name: ${elastic_instance_name}-kb-http
      group: ""
  validation:
    caCertificateRefs:
      - kind: ConfigMap
        name: ${elastic_instance_name}-kb-root-cert
        group: ""
    hostname: ${elastic_instance_name}-kb-http.elastic.kb.local

# Generates a ConfigMap with ES root certficate to be used by the BackendTLSPolicy above.
---
apiVersion: kyverno.io/v1
kind: Policy
metadata:
  name: sync-kb-root-cert
spec:
  useServerSideApply: true
  rules:
    - name: sync-kb-root-cert
      match:
        any:
          - resources:
              kinds:
                - Secret
              names:
                - "*-kb-http-certs-public"
      generate:
        synchronize: true
        generateExisting: true
        apiVersion: v1
        kind: ConfigMap
        name: ${elastic_instance_name}-kb-root-cert
        data:
          kind: ConfigMap
          data:
            ca.crt: "{{ request.object.data.\"ca.crt\" | base64_decode(@) }}"
